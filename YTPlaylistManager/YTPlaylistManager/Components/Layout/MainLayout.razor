@using YTPlaylistManager.Components.Account.Shared
@inherits LayoutComponentBase
@implements IDisposable

@inject NavigationManager NavigationManager

<RadzenLayout>
    <RadzenHeader class="rz-p-2">
        <div style="display: flex; align-items: center; justify-content: space-between; width: 100%;">
            <RadzenStack Orientation=" Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0" Style="width: 50px; height: 50px;">
                <RadzenSidebarToggle Click="@(() => sidebar1Expanded = !sidebar1Expanded)" />
                <RadzenImage Path="logo.png" Style="width: 3rem;" AlternateText="logo" />

                <RadzenLabel Style="font-weight: bold; letter-spacing: 2px; padding: 10px;" Text="YTPlaylistManager" />
            </RadzenStack>
            <AuthorizeView>
                <NotAuthorized>
                    <ExternalLoginPicker />
                </NotAuthorized>
            </AuthorizeView>
        </div>
    </RadzenHeader>
    <RadzenSidebar @bind-Expanded="@sidebar1Expanded">
        <AuthorizeView>
            <Authorized>
                <RadzenPanelMenu>
                    <RadzenPanelMenuItem Text="Auth" Icon="account_box" Path="Auth" />
                    <RadzenPanelMenuItem Text="MyUploads" Icon="account_box" Path="MyUploads" />
                    <RadzenPanelMenuItem Text="MyPlaylists" Icon="account_box" Path="MyPlaylists" />
                    <RadzenPanelMenuItem Text="@context.User.Identity?.Name" Icon="home" Path="Account/Manage" />
                    <Logout />
                </RadzenPanelMenu>
            </Authorized>
        </AuthorizeView>
    </RadzenSidebar>
    <RadzenBody>
        <div class="rz-p-4">
            @Body
        </div>
    </RadzenBody>
    <RadzenFooter>
        C by tymonello
    </RadzenFooter>
</RadzenLayout>
<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>
@code {
    bool sidebar1Expanded = true;
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}